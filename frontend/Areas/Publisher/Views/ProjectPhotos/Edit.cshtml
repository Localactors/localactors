@using System.Configuration
@model Localactors.entities.project_photo

@{
    ViewBag.Title = "Edit";
}
<script type="text/javascript">

    var awsbase = '@ConfigurationManager.AppSettings["AWSS3BucketUrl"]';
    var baseurl = awsbase;

</script>


<ul class="breadcrumb">
    <li><a href='@Url.Action("Index", "Home", new { Area = "Publisher" })'>Publisher Home</a>
        <span class="divider">/</span></li>
    <li><a href='@Url.Action("Index", "Home", new { Area = "Publisher" })'>Projects</a>
        <span class="divider">/</span></li>
    <li><a href='@Url.Action("Edit", "Projects", new { id = @ViewBag.Project.ProjectID, Area = "Publisher" })'>
            @ViewBag.Project.Title</a> <span class="divider">/</span></li>
    <li><a href='@Url.Action("Index", "ProjectPhotos", new { projectid = @ViewBag.Project.ProjectID, Area = "Publisher" })'>
                           Photos</a>  <span class="divider">/</span></li>
     <li class="active"><a href='@Url.Action("Edit", "ProjectPhotos", new {id=Model.PhotoID, projectid = @ViewBag.Project.ProjectID, Area = "Publisher" })'>
        Edit Photo</a> </li>
</ul>


@using (Html.BeginForm("Edit", "ProjectPhotos", FormMethod.Post, new { enctype = "multipart/form-data", id = "mainform" })){
    @Html.ValidationSummary(false)
    <fieldset>
        <legend>project_photo</legend>

        @Html.HiddenFor(model => model.PhotoID)
        <input type="hidden" name="returntoproject" value="@ViewBag.returntoproject"/>


            @Html.HiddenFor(model => model.ProjectID, "project")
     
       
         <div class="editor-label">
            @Html.LabelFor(model => model.Caption)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Caption)
            @Html.ValidationMessageFor(model => model.Caption)
        </div>

        <div class="editor-label">
             Photo
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Url)
            <input type="file" id="Url" name="Url" class="imageupload" />
            @Html.ValidationMessageFor(model => model.Url)

            @Html.ValidationMessage("Url")
            @if (!string.IsNullOrEmpty(Model.Url))
            {
                <img src="@string.Format("{0}?v={1}", Model.Url, DateTime.Now.Ticks)" class="imagepreview" alt=""  width="128px" />
            }
        </div>


        <p>
            <input type="submit" value="Save" class="btn" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { @class = "btn" })
</div>
