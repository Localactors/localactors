@using System.Configuration
@model Localactors.entities.project
@{
    ViewBag.Title = "Create";
}
<ul class="breadcrumb">
    <li><a href='@Url.Action("Index", "Home", new { Area = "Publisher" })'>Publisher Home</a>
        <span class="divider">/</span></li>
    <li><a href='@Url.Action("Index", "Home", new { Area = "Publisher" })'>Projects</a>
        <span class="divider">/</span></li>
    <li class="active"><a href='@Url.Action("Create", "Projects", new { Area = "Publisher" })'>
        Create Project</a> </li>
</ul>
<script type="text/javascript">
    var awsbase = '@ConfigurationManager.AppSettings["AWSS3BucketUrl"]';
    var baseurl = awsbase;
</script>
@using (Html.BeginForm("Create", "Projects", FormMethod.Post, new { enctype = "multipart/form-data", id = "mainform" }))
{
    @Html.ValidationSummary(false)
    <fieldset>
        <legend>project</legend>
        @Html.HiddenFor(model => model.Date)
        @Html.HiddenFor(model => model.DateUpdate)
        @Html.HiddenFor(model => model.ProjectID)
        @Html.HiddenFor(model => model.UserID)
        @Html.HiddenFor(model => model.Cover)
        @Html.HiddenFor(model => model.Enabled)
        <div class="panel">
            <div class="editor-label">
                @Html.LabelFor(model => model.AgancyName, "Agency Name")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.AgancyName)
                @Html.ValidationMessageFor(model => model.AgancyName)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.AgencyWebsite, "Agency Website")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.AgencyWebsite)
                @Html.ValidationMessageFor(model => model.AgencyWebsite)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.AgencyLogo, "Agency Logo")
            </div>
            <div class="editor-field">
                @Html.HiddenFor(model => model.AgencyLogo)
                <input type="file" id="AgencyLogo" name="AgencyLogo" class="imageupload" />
                @Html.ValidationMessageFor(model => model.AgencyLogo)
                <img src="@string.Format("{0}?v={1}", Model.AgencyLogo, DateTime.Now.Ticks)" class="imagepreview" alt=""  />
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.AgencyObjective, "Agency Objective")
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.AgencyObjective)
                @Html.ValidationMessageFor(model => model.AgencyObjective)
            </div>
        </div>
        <div class="panel">
            <div class="editor-label">
                @Html.LabelFor(model => model.CountryID, "country")
            </div>
            <div class="editor-field">
                @Html.DropDownList("CountryID", String.Empty)
                @Html.ValidationMessageFor(model => model.CountryID)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Location, "Location (city,location,whatever)")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Location)
                @Html.ValidationMessageFor(model => model.Location)
            </div>
        </div>
        <div class="panel">
            <div class="editor-label">
                @Html.LabelFor(model => model.Title, "Project Title")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Description)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.ProjectGoal, "Project Goal")
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.ProjectGoal)
                @Html.ValidationMessageFor(model => model.ProjectGoal)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.ProjectPlan, "Project Plan (plain escription)")
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.ProjectPlan)
                @Html.ValidationMessageFor(model => model.ProjectPlan)
            </div>
            <div class="editor-label">
                Image
            </div>
            <div class="editor-field">
                @Html.HiddenFor(model => model.Image)
                <input type="file" id="Image" name="Image" class="imageupload" />
                @Html.ValidationMessageFor(model => model.Image)
                @Html.ValidationMessage("Image")
                <img src="@string.Format("{0}?v={1}", Model.Image, DateTime.Now.Ticks)" class="imagepreview" alt=""  />
            </div>
        </div>
        <div class="panel">
            <div class="editor-label">
                @Html.LabelFor(model => model.DateStart)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.DateStart)
                @Html.ValidationMessageFor(model => model.DateStart)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.DateEnd)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.DateEnd)
                @Html.ValidationMessageFor(model => model.DateEnd)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Target, "Economic Target")
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Target)&euro;
                @Html.ValidationMessageFor(model => model.Target) 
            </div>
        </div>
        <div class="panel">
            <div class="editor-label">
                @Html.LabelFor(model => model.Twitter)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Twitter)
                @Html.ValidationMessageFor(model => model.Twitter)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Facebook)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Facebook)
                @Html.ValidationMessageFor(model => model.Facebook)
            </div>
            <div class="editor-label">
                @Html.LabelFor(model => model.Blog)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Blog)
                @Html.ValidationMessageFor(model => model.Blog)
            </div>
        </div>
        
        <p>
            <input type="submit" class="btn" value="Create" />
        </p>
    </fieldset>
}
