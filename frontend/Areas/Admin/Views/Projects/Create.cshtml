@using System.Configuration
@model Localactors.entities.project

@{
    ViewBag.Title = "Create";
}

<script type="text/javascript">

    var awsbase = '@ConfigurationManager.AppSettings["AWSS3BucketUrl"]';
    var baseurl = awsbase;


    $(document).ready(function () {

        $(".imageupload").disableValidation = true;
        $(".imageupload").change(function () {
            $("input").addClass("ignore").disableValidation = true;
            $("form").disableValidation = true;
            $("#mainform").submit();
        });

        $(".imagepreview").load(function () {
            //console.log($(this));
        });
        $(".imagepreview").click(function () {
            PreviewImage($(this).attr("src"));
        });


        $("input[type=file]").each(function () {
            var input = $(this);
            var name = input.attr("id");
            var btn = $("<input type='button' value='upload'></input>");

            input.after(btn);
            input.css("display", "none");

            btn.click(function () {
                //console.log(input.attr("name"));
                input.click();
            });

        });

    });


    PreviewImage = function (uri) {

        var imageDialog = $("#dialog");
        var imageTag = $('#image', imageDialog);
        var uriParts = uri.split("/");

        imageTag.attr('src', uri);

        imageTag.load(function () {

            $('#dialog').dialog({
                zIndex: 9999,
                modal: true,
                resizable: true,
                draggable: true,
                width: 'auto',
                title: uriParts[uriParts.length - 1]
            });
        });
    };
</script>

<ul class="breadcrumb">
    <li><a href='@Url.Action("Index","Home")'>Home</a> <span class="divider">/</span></li>
    <li><a href='@Url.Action("Index","projects")'>Projects</a> <span class="divider">/</span></li>
    <li class="active"><a href="/admin/projects/create">Create</a> </li>
</ul>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm("Create", "Projects", FormMethod.Post, new {enctype = "multipart/form-data", id = "mainform"})) {
    @Html.ValidationSummary(false)
    <fieldset>
        <legend>project</legend>
        
      @Html.HiddenFor(model => model.DateUpdate)
      

        <div class="editor-label">
            @Html.LabelFor(model => model.UserID, "user")
        </div>
        <div class="editor-field">
            @Html.DropDownList("UserID", String.Empty)
            @Html.ValidationMessageFor(model => model.UserID)
        </div>
        
        <hr/>

        <div class="editor-label">
            @Html.LabelFor(model => model.AgancyName,"Agency Name")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AgancyName)
            @Html.ValidationMessageFor(model => model.AgancyName)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.AgencyWebsite,"Agency Website")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.AgencyWebsite)
            @Html.ValidationMessageFor(model => model.AgencyWebsite)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.AgencyLogo, "Agency Logo")
        </div>
        <div class="editor-field">
             @Html.EditorFor(model => model.AgencyLogo)
            <input type="file" id="AgencyLogo" name="AgencyLogo" class="imageupload" />
            @Html.ValidationMessageFor(model => model.AgencyLogo)
            <img src="@string.Format("{0}?v={1}", Model.AgencyLogo, DateTime.Now.Ticks)" class="imagepreview" alt=""  />
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.AgencyObjective, "Agency Objective")
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.AgencyObjective)
            @Html.ValidationMessageFor(model => model.AgencyObjective)
        </div>

        <hr/>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.CountryID, "country")
        </div>
        <div class="editor-field">
            @Html.DropDownList("CountryID", String.Empty)
            @Html.ValidationMessageFor(model => model.CountryID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Location,"Location (campo libero)")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Location)
            @Html.ValidationMessageFor(model => model.Location)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Cover, "Cover Project")
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.Cover)
            @Html.ValidationMessageFor(model => model.Cover)
        </div>
        
        <hr/>

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>
         <div class="editor-label">
            @Html.LabelFor(model => model.ProjectPlan)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.ProjectPlan)
            @Html.ValidationMessageFor(model => model.ProjectPlan)
        </div>

        
        
        <div class="editor-label">
             Image
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Image)
            <input type="file" id="Image" name="Image" class="imageupload" />
            @Html.ValidationMessageFor(model => model.Image)

            @Html.ValidationMessage("Image")
            <img src="@string.Format("{0}?v={1}", Model.Image, DateTime.Now.Ticks)" class="imagepreview" alt=""  />
            
        </div>

        <hr/>
        
          <div class="editor-label">
            @Html.LabelFor(model => model.Twitter)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Twitter)
            @Html.ValidationMessageFor(model => model.Twitter)
        </div>
          <div class="editor-label">
            @Html.LabelFor(model => model.Facebook)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Facebook)
            @Html.ValidationMessageFor(model => model.Facebook)
        </div>
          <div class="editor-label">
            @Html.LabelFor(model => model.Blog)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Blog)
            @Html.ValidationMessageFor(model => model.Blog)
        </div>  
       
        <hr/>


        <div class="editor-label">
            @Html.LabelFor(model => model.Date)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Date)
            @Html.ValidationMessageFor(model => model.Date)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateStart)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateStart)
            @Html.ValidationMessageFor(model => model.DateStart)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateEnd)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateEnd)
            @Html.ValidationMessageFor(model => model.DateEnd)
        </div>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Target, "Economic Target")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Target)
            @Html.ValidationMessageFor(model => model.Target)
        </div>

        <p>
            <input type="submit" class="btn"  value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index",new{},new{@class="btn"})
</div>
