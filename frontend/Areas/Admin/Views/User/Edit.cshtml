@using System.Configuration
@model Localactors.entities.user

@{
    ViewBag.Title = "Edit";
}

<script type="text/javascript">

    var awsbase = '@ConfigurationManager.AppSettings["AWSS3BucketUrl"]';
    var baseurl = awsbase;


    $(document).ready(function () {

        $(".imageupload").disableValidation = true;
        $(".imageupload").change(function () {
            $("input").addClass("ignore").disableValidation = true;
            $("form").disableValidation = true;
            $("#mainform").submit();
        });

        $(".imagepreview").load(function () {
            //console.log($(this));
        });
        $(".imagepreview").click(function () {
            PreviewImage($(this).attr("src"));
        });


        $("input[type=file]").each(function () {
            var input = $(this);
            var name = input.attr("id");
            var btn = $("<input type='button' value='upload'></input>");

            input.after(btn);
            input.css("display", "none");

            btn.click(function () {
                //console.log(input.attr("name"));
                input.click();
            });

        });

    });


    PreviewImage = function (uri) {

        var imageDialog = $("#dialog");
        var imageTag = $('#image', imageDialog);
        var uriParts = uri.split("/");

        imageTag.attr('src', uri);

        imageTag.load(function () {

            $('#dialog').dialog({
                zIndex: 9999,
                modal: true,
                resizable: true,
                draggable: true,
                width: 'auto',
                title: uriParts[uriParts.length - 1]
            });
        });
    };
</script>

<ul class="breadcrumb">
    <li><a href='@Url.Action("Index","Home")'>Home</a> <span class="divider">/</span></li>
    <li><a href="@Url.Action("Index","User")">Users</a> <span class="divider">/</span></li>
    <li class="active"><a href="@Url.Action("Edit", "User", new {id = Model.UserID})">@Model.UserName (edit)</a></li>
</ul>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm("Edit", "User", FormMethod.Post, new {enctype = "multipart/form-data", id = "mainform"})) {
    @Html.ValidationSummary(false)
    <fieldset>
        <legend>user</legend>

        @Html.HiddenFor(model => model.UserID)
        

        <div class="editor-label">
            @Html.LabelFor(model => model.Role)
        </div>
        <div class="editor-field">
            @Html.DropDownList("Role",String.Empty)
            @Html.ValidationMessageFor(model => model.Role)
        </div>
        

        <div class="editor-label">
            @Html.LabelFor(model => model.UserName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserName)
          @Html.ValidationMessageFor(model => model.UserName)
        </div>

        @Html.HiddenFor(model => model.UserPassword)

        <hr/>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Lastname)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Lastname)
            @Html.ValidationMessageFor(model => model.Lastname)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Bio)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Bio)
            @Html.ValidationMessageFor(model => model.Bio)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CountryID, "country")
        </div>
        <div class="editor-field">
            @Html.DropDownList("CountryID", String.Empty)
            @Html.ValidationMessageFor(model => model.CountryID)
        </div>
        
        <div class="editor-label">
             Image
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Image)
            <input type="file" id="Image" name="Image" class="imageupload" />
            @Html.ValidationMessageFor(model => model.Image)

            @Html.ValidationMessage("Image")
            @if (!string.IsNullOrEmpty(Model.Image))
            {
                <img src="@string.Format("{0}?v={1}", Model.Image, DateTime.Now.Ticks)" class="imagepreview" alt=""  />
            }
        </div>

       <hr/>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Contact_Blog,"Blog Url")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Contact_Blog)
            @Html.ValidationMessageFor(model => model.Contact_Blog)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Contact_Email,"Contact Email")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Contact_Email)
            @Html.ValidationMessageFor(model => model.Contact_Email)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Contact_Facebook,"Facebook")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Contact_Facebook)
            @Html.ValidationMessageFor(model => model.Contact_Facebook)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Contact_Linkedin,"Linkedin")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Contact_Linkedin)
            @Html.ValidationMessageFor(model => model.Contact_Linkedin)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Contact_Skype,"Skype Name")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Contact_Skype)
            @Html.ValidationMessageFor(model => model.Contact_Skype)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Contact_Tel,"Contact Telephone")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Contact_Tel)
            @Html.ValidationMessageFor(model => model.Contact_Tel)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Contact_Twitter,"Twitter")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Contact_Twitter)
            @Html.ValidationMessageFor(model => model.Contact_Twitter)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Contact_Web,"Website")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Contact_Web)
            @Html.ValidationMessageFor(model => model.Contact_Web)
        </div>

        <hr/>

        <div class="editor-label">
            @Html.LabelFor(model => model.Enabled)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Enabled)
            @Html.ValidationMessageFor(model => model.Enabled)
        </div>
        
          <div class="editor-label">
            @Html.LabelFor(model => model.EnablePublisher,"Show Publisher")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EnablePublisher)
            @Html.ValidationMessageFor(model => model.EnablePublisher)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Confirmed,"Email Confirmed")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Confirmed)
            @Html.ValidationMessageFor(model => model.Confirmed)
        </div>


        <div class="editor-label">
            @Html.LabelFor(model => model.Privacy)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Privacy)
            @Html.ValidationMessageFor(model => model.Privacy)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Newsletter)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Newsletter)
            @Html.ValidationMessageFor(model => model.Newsletter)
        </div>

   
            @Html.HiddenFor(model => model.Reset)
  
            @Html.HiddenFor(model => model.ShouldChangePassword)


            @Html.HiddenFor(model => model.ResetEndDate)
       
   
            @Html.HiddenFor(model => model.Email_Hash)
      
            @Html.HiddenFor(model => model.DateJoined)
       

 
            @Html.HiddenFor(model => model.DateLastLogin)
   

        <p>
            <input type="submit" class="btn"  value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index",new{},new{@class="btn"})
</div>
