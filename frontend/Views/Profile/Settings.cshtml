@using System.Configuration
@model Localactors.entities.user

@{
    ViewBag.Title = "Account Settings";
}

<script type="text/javascript">

    $(document).ready(function () {

        $(".imageupload").disableValidation = true;
        $(".imageupload").change(function () {
            $("input").addClass("ignore").disableValidation = true;
            $("form").disableValidation = true;
            $("#mainform").submit();
        });

        $("input[type=file]").each(function () {
            var input = $(this);
            var name = input.attr("id");
            var btn = $("<input type='button' value='upload'></input>");

            input.after(btn);
            input.css("display", "none");

            btn.click(function () {
                input.click();
            });

        });

    });


</script>

<div id='update-body'>

@using (Html.BeginForm("Settings", "Profile", FormMethod.Post, new { enctype = "multipart/form-data", id = "mainform" })) {
    @Html.ValidationSummary(true)

      

        @Html.HiddenFor(model => model.UserID)
        @Html.HiddenFor(model => model.UserName)

        <div class="editor-label">
            First Name
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            Last Name
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Lastname)
            @Html.ValidationMessageFor(model => model.Lastname)
        </div>

        <div class="editor-label">
            Your Details
        </div>
    <div class="editor-field">
        @Html.TextAreaFor(model => model.Bio)
        @Html.ValidationMessageFor(model => model.Bio)
    </div>
    
     <div class="editor-label">
            Country
        </div>
        <div class="editor-field">
            @Html.DropDownList("CountryID", String.Empty)
            @Html.ValidationMessageFor(model => model.CountryID)
        </div>


        <div class="editor-label">
            Avatar
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Image)
            <input type="file" id="Image" name="Image" class="imageupload" />
            @Html.ValidationMessageFor(model => model.Image)

            @Html.ValidationMessage("Image")
            @if (!string.IsNullOrEmpty(Model.Image))
            {
                <img src="@string.Format("{0}?v={1}", Model.Image, DateTime.Now.Ticks)" class="imagepreview" alt=""  />
            }
        </div>
        
       <hr/>
        
        <div class="editor-label">
            @Html.LabelFor(model => model.Contact_Blog, "Blog Url")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Contact_Blog)
            @Html.ValidationMessageFor(model => model.Contact_Blog)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Contact_Email, "Contact Email")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Contact_Email)
            @Html.ValidationMessageFor(model => model.Contact_Email)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Contact_Facebook, "Facebook")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Contact_Facebook)
            @Html.ValidationMessageFor(model => model.Contact_Facebook)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Contact_Linkedin, "Linkedin")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Contact_Linkedin)
            @Html.ValidationMessageFor(model => model.Contact_Linkedin)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Contact_Skype, "Skype Name")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Contact_Skype)
            @Html.ValidationMessageFor(model => model.Contact_Skype)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Contact_Tel, "Contact Telephone")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Contact_Tel)
            @Html.ValidationMessageFor(model => model.Contact_Tel)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Contact_Twitter, "Twitter")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Contact_Twitter)
            @Html.ValidationMessageFor(model => model.Contact_Twitter)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Contact_Web, "Website")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Contact_Web)
            @Html.ValidationMessageFor(model => model.Contact_Web)
        </div>

        <hr/>
        


        <p>
            <input type="submit" value="Update" />
        </p>
   
}

</div>