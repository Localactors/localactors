@using System.Configuration
@model update
@{
    var PP_URL = Url.Content("~/Scripts/paypal-button.min.js") + "?merchant=" + ConfigurationManager.AppSettings["PP_MerchantAccountId"];
}
@{Html.RenderPartial("_Project_Update_Header", Model.project);}

@*<div id='project-update-tab'>
    <ul class='tab'>
        <li class='active'><a href='@Url.Action("Updates","Projects",new{id=Model.ProjectID})'>Update</a> </li>
        <li><a href='@Url.Action("Details","Projects",new{id=Model.ProjectID})'>Project Details</a> </li>
        <li><a href='@Url.Action("Guestbook","Projects",new{id=Model.ProjectID})'>Guestbook</a> </li>
        <li><a href='@Url.Action("Ask","Projects",new{id=Model.ProjectID})'>Ask a Question</a> </li>
    </ul>
    <hr class='tab-line'>
</div>*@

<div id='update-body'>
    <ul id='info-project'>
        <li>
            <h2>@((DateTime.Now - Model.project.DateEnd).Days)</h2>
            <h3>
                Days
            </h3>
        </li>
        <li>
            <h2>
                @Model.project.donations.Select(x => x.UserID).Distinct().Count()
            </h2>
            <h3>
                Supporters
            </h3>
        </li>
        <li class='money'>
            <h2>
                <span class="euro">&#128;</span> @Model.project.donations.Sum(x => x.Amount)
            </h2>
            <h3>
                Raised of <span class="total">&#128; @Model.project.Target</span> pledged
            </h3>
        </li>

        <li class='achieved'>
            <div class='worm'>
            </div>
            <ul id='project-step'>
                @{var counter = 0;}
                @foreach (var achievement in Model.project.achievements.OrderBy(x => x.Date))
                {
                    counter++;
                    <li>
                        <hr class='step'>
                        <div class='main-container'>
                            <h4 class='number'>
                                @counter.
                            </h4>
                            <div class='step-container'>
                                <h3 class='step'>
                                    @achievement.Title
                                </h3>
                                <h3 class='money'>
                                    &#128; @achievement.Goal
                                </h3>
                            </div>
                        </div>
                    </li>
                }
            </ul>
        </li>
        <hr class='info-spacer' />
    </ul>
    <div class='single-update'>
        <div class='single-update-header'>
            <div class='date'>
                <h3 class='day'>
                    @Model.Date.Day /
                </h3>
                <h3 class='month'>
                    @Model.Date.Month /
                </h3>
                <h3 class='year'>
                    @Model.Date.Year</h3>
            </div>
            <div class='comments-container'>
                <div class='comments'>
                    <div class='arrow'>
                    </div>
                    <a href='#comments'>@Model.update_comment.Count Comments</a>
                </div>
                <div class='share'>
                    <div class='arrow'>
                    </div>
                    <a href='#'>Share</a>
                </div>
              
            </div>
            <div class='update-headline-container'>
                <div class='main-container'>
                    <p class='info-project-track'>
                        <span class="number">@((Model.Date - Model.project.DateEnd).Days)</span> days /
                        <span class="number">&#128; @Model.project.donations.Where(x => x.Date <= Model.Date).Sum(x => x.Amount)</span>
                        raised of <span class="number">&#128; @Model.project.Target</span> pledged / <span
                            class="number">@Model.project.donations.Where(x => x.Date <= Model.Date).Select(x => x.UserID).Distinct().Count()</span>
                        supporters
                    </p>
                    <div class='clear'>
                    </div>
                    <h1 class='title-update'>
                        @Model.Title
                    </h1>
                </div>
            </div>
            <div class='intro-update-container'>
                <p class='intro'>
                    @Model.Intro
                </p>
            </div>
        </div>
        @foreach (update_content content in Model.update_content)
        {
            <div class='single-update-body'>
                @{ Html.RenderPartial("_Update_Content", content); }
            </div>
        }
    </div>
    <div class='clear'>
    </div>
    <div class='comments-container'>
        <a name="comments" id="comments" />
        <h4>
            Comments</h4>
        @foreach (var item in Model.update_comment)
        {
            <div>
                from: @item.user.UserName</div>
            <div>
                date: @item.Date</div>
            <div>@item.Text</div>
            <br />
        }

        @if (User.Identity.IsAuthenticated) {
            using (Html.BeginForm("CommentCreate","Projects", FormMethod.Post, new {enctype = "multipart/form-data", id = "", @class="commentform"})) {
                <input type="hidden" name="UpdateID" value="@Model.UpdateID"/>
                <input type="hidden" name="UserID" value="@User.Identity"/>
                <input type="hidden" name="Date" value="@DateTime.Now.ToShortDateString()"/>
                <div class="editor-label">
                    Text
                </div>
                <div class="editor-field">
                    @Html.TextArea("Text")
                    @Html.ValidationMessage("Text")
                </div>

                <p>
                    <input type="submit" class="btn" value="Create" />
                </p>
            }
        }
    </div>
    <hr class='update' />
</div>
