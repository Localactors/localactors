@model Localactors.entities.user

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>user</legend>

        @Html.HiddenFor(model => model.UserID)

        <div class="editor-label">
            @Html.LabelFor(model => model.Role)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Role)
            @Html.ValidationMessageFor(model => model.Role)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserName)
            @Html.ValidationMessageFor(model => model.UserName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserPassword)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserPassword)
            @Html.ValidationMessageFor(model => model.UserPassword)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Lastname)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Lastname)
            @Html.ValidationMessageFor(model => model.Lastname)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Bio)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Bio)
            @Html.ValidationMessageFor(model => model.Bio)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CountryID, "country")
        </div>
        <div class="editor-field">
            @Html.DropDownList("CountryID", String.Empty)
            @Html.ValidationMessageFor(model => model.CountryID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Enabled)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Enabled)
            @Html.ValidationMessageFor(model => model.Enabled)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Confirmed)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Confirmed)
            @Html.ValidationMessageFor(model => model.Confirmed)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ShouldChangePassword)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ShouldChangePassword)
            @Html.ValidationMessageFor(model => model.ShouldChangePassword)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Privacy)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Privacy)
            @Html.ValidationMessageFor(model => model.Privacy)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Newsletter)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Newsletter)
            @Html.ValidationMessageFor(model => model.Newsletter)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Reset)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Reset)
            @Html.ValidationMessageFor(model => model.Reset)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ResetEndDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ResetEndDate)
            @Html.ValidationMessageFor(model => model.ResetEndDate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email_Hash)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email_Hash)
            @Html.ValidationMessageFor(model => model.Email_Hash)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateJoined)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateJoined)
            @Html.ValidationMessageFor(model => model.DateJoined)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DateLastLogin)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DateLastLogin)
            @Html.ValidationMessageFor(model => model.DateLastLogin)
        </div>

        <p>
            <input type="submit" class="btn"  value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index",new{},new{@class="btn"})
</div>
